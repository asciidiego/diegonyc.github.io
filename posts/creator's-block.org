#+AUTHOR: Diego V. Rodriguez
#+TITLE: Creator's Block
#+DATE: <2021-05-20 Thu>
#+OPTIONS: \n:t num:nil toc:nil

#+BEGIN_EXPORT html
<style type="text/css">
 .title { text-align: left; }
</style>
<img src="assets/Leonid_Pasternak_-_The_Passion_of_creation.jpeg"
     width="288px"/>
<i>
  <p>
    A representation of writer's block by Leonid Pasternak
    (1862 â€“ 1945)
  </p>
</i>
#+END_EXPORT

/For days I have felt blocked; and I know that, in these cases, the
best thing you can do is to create non-stop./

I thought about this some days ago. Then I decided to write an essay
about it.  After all, if you feel a certain way, you can be confident
that others feel that way too---this is /Being Human 101/[fn:4].

The creative forces that drive your mind are not immune to Newton's
laws of motion---especially the first one [fn:5]. Thus, if you apply
force to create, your mind will keep a somewhat steady rate of
creation.  This is not unique to objects in the physical world or the
creative mind; this happens with habits as well.  Do you know why
after you stop working out for a while, if you are not careful, you
stop altogether?  Newton does.

Why, then, do we hesitate so much when trying to overcome this
opposite force to creativity?  If we only need to keep creating, why
don't we do it more?

After some thought of what the cause might be, my best bet is
fear. Fear of wasting one's life pursuing a potentially bad course.
If there is anything that haunts people at night it is the feeling
that they are not living their ephemeral life to the fullest.  At
least that is my fear. It seems a recurrent theme among artists
too[fn:3].

Then, the answer is simple: just work on that which you are good
at. But, how are we supposed to know what we are good at without
trying it first? My guess is that you cannot. You must try that
something more than once---some even define /trying/ as engaging in
the task at hand for years.

Until you find something that looks like work to others but play to
you, keep exploring.  Use your innate curiosity.  Then, start
learning[fn:6].

Now, how do you learn to draw, write, or, well, do anything?  The same
way computers learn. You perform the action you want to learn over and
over. It is that simple. The efficiency and effectiveness depends on
many factors---such as genes or the environment. But, while the
factors that define the learning rate are somewhat variable, the way
to learn is constant.

This is why it is funny to me when others say that they do not try to
draw because they do not know how. Those same people were once babies
that drew all over the place and were babbling in their way to
learning their native tongue(s). Isn't that funny? And I do not mean
/funny/ funny, more like /sad/ funny.

Despite many people knowing all of this, most adults are stuck in the
/tutorial purgatory/[fn:9] of life figuring out how to get out of the
rat race. Meanwhile, there are [[https://youtu.be/6EM2U8v-KTg][kids]] that seem to know the huge
leverage we have today and, bear with me, seem to have fun in the
process. Can you believe it? Not only are they programming the robot
army of the future; they are publishing about how they did it at the
same time. All while going to school. Naval Ravikant and Paul Graham
would be [[https://twitter.com/naval/status/1002106317064949763][proud]].

Most of the people out there would be better off coding instead of
wondering how to code[fn:1][fn:2]. This is not me criticizing
others. This is me talking to myself about what, deep inside, I
already knew. You only need to get going. That is all it takes to
truly build something. To create something new in this world.

At first, you should not worry whether that /new/ thing is of
value. Just like we cannot judge a butterfly in its larval form, we
cannot judge our future work based on how it looks now. We do this
naturally. This is why so many great ideas are disregarded so
baldly.

The path to skill has ups and downs. But, if you stay wondering
eternally about the /Travelling Salesman Problem/ you will not travel
nor sell anything. And it is better to go back to where you started
instead of never having moved in the first place[fn:7].

A beloved and smart friend once told me kind words. I think they apply
to more people than I would have imagined:

/Never ever stop. Continue building, creating, and thinking. There are
virtually no limits to how far you can get./

Do you ever wonder why many people love the genius story? The story
about the person whose brain was once touched by God or Midas himself
when they were born? How are we supposed to compete with these
individuals?  "Why even bother" is what we tell ourselves to appease
our anxiety.  To rationalize our laziness.

I think that is wishful thinking. One does not need to be Einstein to
become rich. Yet, it is easier to imagine that our brain is not in the
top 0.05% and, thus, there is no point in trying. Or so we tell
ourselves.

I believe that we should work hard despite our perceived weaknesses,
because they matter less than we think. And even less as time goes
by. The more leverage we have, thanks to programming and media, the
less our marginal differences in intelligence matter to achieve
certain things.  At least, so that we all live comfortably.  Writers
reach millions spending pennies---if any--by using online
blogs. Musicians play for the masses on Spotify without the
distribution costs of CDs. Programmers can control so many processors
for free that they don't even know what to do with them. It has come
to the point where they program the robot army to create applications
about memes[fn:8]. This is the new Renaissance Age. One kindled by the
spark of transistors instead of the printing press or the steam
engine. So, go out there and learn some useful skills. A good place to
start is math.

Software will keep eating the world and will increase its complexity
in the process. There is a lot to build. The world will get noisier as
well. In the Information Age, information overload is the order of the
day. Abundance creates a particular form of scarcity; where there is a
lot, there is a lot to sort out. So, let us build the tools that will
help us tackle this paradox.

As for me, I will continue to learn about computer science and math.
However, I still need to refine my interests; to find
knowledge-interest fit[fn:11].  Finding what one loves is not
easy[fn:10].  In fact, I have not done it myself.  Computer science,
math, and art is a subset in the set of all human knowledge, but that
is not enough.  One must find a subset you feel passionate about--at
the bare minimum.

You need to enjoy your work more than your unproductive pleasures.
What I call /creator's block/ in this essay is part block and part
procrastination.  Nobody procrastinates when they are doing something
exciting---even work. Thus, if you find yourself procrastinating like
I do, perhaps you need to redefine what work is for you.

If you want to beat the creator's block, tackle the root causes .
Procrastination fades when you are working in something that makes you
admire yourself.  While we are our own worst critic, we have all felt
proud of our accomplishments.  I am not talking about artificial
accomplishments such as a getting your college degree, getting into
medical school, or finding a new job.  These are external rewards
crafted by society, not by your inner self.  They are accomplishments
on paper and will only make you happy on paper as well.

If it is not artificial problems, what kind of problems are we talking
about?  I am talking about those problems that you solved and made you
go into the mirror and think: you rock.  For example, my mom is bad
with electronic devices. One day, though, she fixed her own phone from
a virus and felt ecstatic about it for three days straight.  What is
amusing and endearing about this situation is that I remember that she
once got a salary increase and did not feel as happy. When she got her
raise it felt like the happiness lasted for less than a third of time
and was not as intense in comparison to when she fixed her phone by
herself.  Work on those kind of problems.  The ones that make you and
your friends think, wow, that is pretty cool.

In the end, YCombinator's motto of /make something people want/
applies to you in the first place.  Follow the airlines principle of
helping yourself before you start helping others.  Until you start
working on something that people want, you should be working on
something that you want.  And before that, you should be working on
finding out what is it that you want to work on.  You only need one
home run to win the game.

* Acknowledgements

  *Thanks* to Victor Perez, Stefan Acin, Luisa Gonzalez, and Daniel
  Orihuela for reading some drafts of this essay.

  *Thanks* to Paul Graham, Naval Ravikant, Amjad Masad, Richard
  Stallman, Linus Torvalds, and Stephen Elliott for inspiring me.

* Footnotes

[fn:11]If we imagine knowledge as a set of points and your interests
as another, to work on what you love is to find the intersection
between those two sets.  While I may have over-simplified it (since
you also need to take into account your natural ability and other
factors), I think that this is a good thumb rule to follow.

[fn:10]Paul Graham wrote a whole [[http://www.paulgraham.com/love.html][essay]] about it. 

[fn:9]Tutorial purgatory---or tutorial hell---is what some computer
programmers call the phase where one is attending courses and reading
manuals instead of building new things.  I call it the Anti-[[https://fs.blog/2021/02/feynman-learning-technique/][Feynmann
Technique]] of learning.  The only way you can learn is by explaining
what you learn and using that information in a variety of situations.

[fn:8][[https://replit.com/apps/memes][Literally.]] 

[fn:7]this is why this essay is online despite its flaws; preach what
you teach.

[fn:6]This problem is so pervasive that computer scientists even have
a name for it: the explore-exploit problem.

[fn:5]An object will not change its motion unless a force acts on it. 

[fn:4]My gut tells me that realizing this early in life is
important. Particularly if you want to create a startup.

[fn:3]For example, Leonardo Da Vinci is famous to have said "I have
offended God and mankind because my work did not reach the quality it
should have.". Allegedly.

[fn:2]After all, that is [[https://twitter.com/paulg/status/1247081777547616266][the most important quality of code]].

[fn:1]As Kevin O'Leary said about business: you are not going to
learn about business by reading about business; and you are definitely
not going to learn about business reading about learning about
business.

